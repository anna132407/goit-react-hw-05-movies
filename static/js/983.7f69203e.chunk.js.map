{"version":3,"file":"static/js/983.7f69203e.chunk.js","mappings":"2LACA,EAA4B,yBAA5B,EAAuG,8B,SCK1FA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,SAAAC,GAEV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMT,GAAhD,UAWE,gBAAKE,UAAWC,EAAhB,SAAqCE,EAAMK,WAZtCL,EAAME,GAgBlB,KAGN,C,kHCOD,UAlCA,WACE,OAAkCI,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAee,EAAf,KACA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOI,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,6FAChBL,GAAa,GADG,SAGdA,GAAa,GAHC,UAMJM,EAAAA,EAAAA,MANI,gBAKKpB,EALL,EAKZqB,KAAQC,QAEVP,EAAUf,GAPI,kDASdiB,EAAS,KAAMM,SATD,yBAWdT,GAAa,GAXC,6EAAH,qDAcfK,GACD,GAAE,KAGD,gCACE,4CACCN,IAAa,SAAC,IAAD,IACbG,IACC,6DAAqCA,EAArC,+BAEF,SAAC,IAAD,CAAYhB,OAAQA,MAGzB,C,+LCpCDwB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHL,EAAkB,mCAAG,oGACbI,EAAAA,EAAAA,IAAA,sCAAyCC,IAD5B,cAC1BJ,EAD0B,yBAEzBA,GAFyB,2CAAH,qDAKlBK,EAAiB,mCAAG,WAAMlB,GAAN,yFACRgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,oBAAkCiB,IAD1B,uBACvBJ,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBM,EAAgB,mCAAG,WAAMnB,GAAN,yFACPgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,4BAA0CiB,IADnC,uBACtBJ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBO,EAAiB,mCAAG,WAAMpB,GAAN,yFACRgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,4BAA0CiB,IADlC,uBACvBJ,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAIjBQ,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAAAA,EAAAA,IAAA,8BACEM,EADF,oBACmBL,IAFX,uBACvBJ,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/Movie.module.css?61b4","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"Movie_movieList__edbJ5\",\"listImg\":\"Movie_listImg__9UxCo\",\"movieListTitle\":\"Movie_movieListTitle__9zwYr\"};","import { PropTypes } from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './Movie.module.css';\n\n//const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.movieList}>\n      {movies.map(movie => {\n        //const finalImageUrl = `${IMG_URL + movie.poster_path}`;\n        return (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {/* <img\n                src={\n                  movie.poster_path\n                    ? finalImageUrl\n                    : 'https://media.istockphoto.com/id/911590226/vector/movie-time-vector-illustration-cinema-poster-concept-on-red-round-background-composition-with.jpg?s=612x612&w=0&k=20&c=QMpr4AHrBgHuOCnv2N6mPUQEOr5Mo8lE7TyWaZ4r9oo='\n                }\n                alt={movie.title}\n                className={css.listImg}\n              /> */}\n\n              <div className={css.movieListTitle}>{movie.title}</div>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};","import { useEffect, useState } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { fetchPopularMovies } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\n\nfunction Home() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const getMovies = async () => {\n      setIsLoading(true);\n      try {\n        setIsLoading(true);\n        const {\n          data: { results: movies },\n        } = await fetchPopularMovies();\n        setMovies(movies);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, []);\n\n  return (\n    <section>\n      <h2>Trending today:</h2>\n      {isLoading && <Loader />}\n      {error && (\n        <p>Sorry, an error occurred! Error: {error} Please try again later!</p>\n      )}\n      <MoviesList movies={movies}></MoviesList>\n    </section>\n  );\n}\nexport default Home;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a1c58729dd9d07a228419b3d2b553cbb';\n\nexport const fetchPopularMovies = async () => {\n  const data = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieActors = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\nexport const fetchMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n};\n"],"names":["MoviesList","movies","location","useLocation","className","css","map","movie","to","id","state","from","title","useState","isLoading","setIsLoading","setMovies","error","setError","useEffect","getMovies","fetchPopularMovies","data","results","message","axios","API_KEY","fetchMovieDetails","fetchMovieActors","fetchMovieReviews","fetchMovieByQuery","query"],"sourceRoot":""}