{"version":3,"file":"static/js/302.5e4803ac.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/Movie.module.css?61b4","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieSearch/MovieSearch.module.css?a4c9","components/MovieSearch/MovieSearch.jsx","pages/MoviesPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"Movie_movieList__edbJ5\",\"listImg\":\"Movie_listImg__9UxCo\",\"movieListTitle\":\"Movie_movieListTitle__9zwYr\"};","import { PropTypes } from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './Movie.module.css';\n\n//const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.movieList}>\n      {movies.map(movie => {\n        //const finalImageUrl = `${IMG_URL + movie.poster_path}`;\n        return (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {/* <img\n                src={\n                  movie.poster_path\n                    ? finalImageUrl\n                    : 'https://media.istockphoto.com/id/911590226/vector/movie-time-vector-illustration-cinema-poster-concept-on-red-round-background-composition-with.jpg?s=612x612&w=0&k=20&c=QMpr4AHrBgHuOCnv2N6mPUQEOr5Mo8lE7TyWaZ4r9oo='\n                }\n                alt={movie.title}\n                className={css.listImg}\n              /> */}\n\n              <div className={css.movieListTitle}>{movie.title}</div>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"searchform\":\"MovieSearch_searchform__834LF\",\"searchInput\":\"MovieSearch_searchInput__XpEHP\"};","import { PropTypes } from 'prop-types';\nimport { useState } from 'react';\nimport css from './MovieSearch.module.css';\n\nexport const MovieSearch = ({ onSubmit }) => {\n  const [query, setQuery] = useState([]);\n\n  const handleInputChange = e => {\n    const { value } = e.target;\n    setQuery(value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <form className={css.searchform} onSubmit={handleFormSubmit}>\n      <input\n        className={css.searchInput}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        name=\"query\"\n        value={query}\n        onChange={handleInputChange}\n      />\n      <button className={css.searchButton} type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nMovieSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { fetchMovieByQuery } from 'services/api';\n\nimport { MovieSearch } from 'components/MovieSearch/MovieSearch';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nfunction MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) return;\n    const getMovieByQuery = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await fetchMovieByQuery(query);\n\n        setMovies(results);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieByQuery();\n  }, [searchParams]);\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n  return (\n    <section>\n      <MovieSearch onSubmit={handleSubmit} />\n      {isLoading && <Loader />}\n      {error && (\n        <p>Sorry, an error occurred! Error: {error} Please try again later!</p>\n      )}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </section>\n  );\n}\nexport default MoviesPage;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a1c58729dd9d07a228419b3d2b553cbb';\n\nexport const fetchPopularMovies = async () => {\n  const data = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieActors = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\nexport const fetchMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n};\n"],"names":["MoviesList","movies","location","useLocation","className","css","map","movie","to","id","state","from","title","MovieSearch","onSubmit","useState","query","setQuery","e","preventDefault","trim","type","autoComplete","autoFocus","name","value","onChange","target","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","useEffect","get","getMovieByQuery","fetchMovieByQuery","results","message","Loader","length","axios","API_KEY","fetchPopularMovies","data","fetchMovieDetails","fetchMovieActors","fetchMovieReviews"],"sourceRoot":""}